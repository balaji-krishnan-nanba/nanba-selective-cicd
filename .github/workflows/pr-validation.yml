name: PR Validation and Deploy to DEV

on:
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]
    paths:
      - 'src/**'
      - 'databricks.yml'
      - '.github/workflows/pr-validation.yml'

jobs:
  validate-and-deploy:
    runs-on: ubuntu-latest
    name: Validate PR and Deploy to DEV
    environment: development
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "$HOME/.databricks/bin" >> $GITHUB_PATH
      
      - name: Test Databricks Connectivity
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Testing connection to Databricks workspace..."
          echo "Host: $DATABRICKS_HOST"
          
          # Test API connectivity
          response=$(curl -s -o /dev/null -w "%{http_code}" \
            -H "Authorization: Bearer $DATABRICKS_TOKEN" \
            "${DATABRICKS_HOST}/api/2.0/clusters/list")
          
          if [ "$response" = "200" ] || [ "$response" = "403" ]; then
            echo "✅ Successfully connected to Databricks workspace"
          else
            echo "❌ Failed to connect to Databricks workspace"
            echo "Response code: $response"
            echo "Please check:"
            echo "1. DATABRICKS_HOST is correct: $DATABRICKS_HOST"
            echo "2. DATABRICKS_TOKEN is valid"
            echo "3. Workspace exists and is accessible"
            exit 1
          fi
      
      - name: Validate Bundle Configuration
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Validating Databricks bundle configuration..."
          databricks bundle validate -t dev || {
            echo "Bundle validation failed. Continuing with direct deployment..."
          }
      
      - name: Deploy ALL Use Cases to DEV
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "================================================"
          echo "Deploying ALL use cases + shared to DEV environment"
          echo "This deployment is for PR validation purposes"
          echo "================================================"
          
          # Deploy using bundle (includes all paths defined in dev target)
          databricks bundle deploy -t dev --auto-approve
          
          echo "Bundle deployment completed"
      
      - name: Sync All Notebooks to Workspace
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Syncing shared folder to DEV workspace..."
          databricks workspace import-dir \
            ./src/shared \
            /Workspace/Deployments/dev/shared \
            --overwrite
          
          echo "Syncing usecase-1 to DEV workspace..."
          databricks workspace import-dir \
            ./src/usecase-1 \
            /Workspace/Deployments/dev/usecase-1 \
            --overwrite
          
          echo "Syncing usecase-2 to DEV workspace..."
          databricks workspace import-dir \
            ./src/usecase-2 \
            /Workspace/Deployments/dev/usecase-2 \
            --overwrite
          
          echo "All notebooks synced successfully"
      
      - name: List Deployed Assets
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Listing deployed notebooks in DEV workspace:"
          echo "----------------------------------------"
          echo "Shared folder contents:"
          databricks workspace ls /Workspace/Deployments/dev/shared || true
          echo ""
          echo "UseCase-1 folder contents:"
          databricks workspace ls /Workspace/Deployments/dev/usecase-1 || true
          echo ""
          echo "UseCase-2 folder contents:"
          databricks workspace ls /Workspace/Deployments/dev/usecase-2 || true
      
      - name: Run Deployment Validation
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          # Install dependencies for validation script
          pip install requests
          
          # Run validation
          python devops/scripts/validate_deployment.py \
            --env dev \
            --host "$DATABRICKS_HOST" \
            --validate-all
      
      - name: Deployment Summary
        if: always()
        run: |
          if [ "${{ job.status }}" == "success" ]; then
            echo "## ✅ DEV Deployment Successful" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All use cases and shared notebooks have been deployed to the DEV environment." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Deployed Assets:**" >> $GITHUB_STEP_SUMMARY
            echo "- ✓ Shared notebooks" >> $GITHUB_STEP_SUMMARY
            echo "- ✓ Use Case 1 notebooks" >> $GITHUB_STEP_SUMMARY
            echo "- ✓ Use Case 2 notebooks" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Workspace Path:** /Workspace/Deployments/dev/" >> $GITHUB_STEP_SUMMARY
          else
            echo "## ❌ DEV Deployment Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Please check the workflow logs for details." >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Common issues:**" >> $GITHUB_STEP_SUMMARY
            echo "- Invalid Databricks configuration" >> $GITHUB_STEP_SUMMARY
            echo "- Missing notebooks or incorrect paths" >> $GITHUB_STEP_SUMMARY
            echo "- Authentication issues" >> $GITHUB_STEP_SUMMARY
          fi