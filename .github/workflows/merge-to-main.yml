name: Post-Merge Actions

on:
  push:
    branches: [main]
    paths:
      - 'src/**'
      - 'databricks.yml'

jobs:
  post-merge-summary:
    runs-on: ubuntu-latest
    name: Post-Merge Summary
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get commit info
        id: commit
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "message=$(git log -1 --pretty=%B | head -n 1)" >> $GITHUB_OUTPUT
          echo "author=$(git log -1 --pretty=%an)" >> $GITHUB_OUTPUT
          echo "date=$(date +'%Y%m%d-%H%M%S')" >> $GITHUB_OUTPUT
      
      - name: Generate deployment summary
        id: summary
        run: |
          # Check what changed
          CHANGED_FILES=$(git diff --name-only HEAD~1 HEAD)
          
          SHARED_CHANGED=false
          UC1_CHANGED=false
          UC2_CHANGED=false
          
          if echo "$CHANGED_FILES" | grep -q "src/shared/"; then
            SHARED_CHANGED=true
          fi
          
          if echo "$CHANGED_FILES" | grep -q "src/usecase-1/"; then
            UC1_CHANGED=true
          fi
          
          if echo "$CHANGED_FILES" | grep -q "src/usecase-2/"; then
            UC2_CHANGED=true
          fi
          
          echo "shared_changed=${SHARED_CHANGED}" >> $GITHUB_OUTPUT
          echo "uc1_changed=${UC1_CHANGED}" >> $GITHUB_OUTPUT
          echo "uc2_changed=${UC2_CHANGED}" >> $GITHUB_OUTPUT
      
      - name: Deployment Summary
        run: |
          echo "## 🎉 Code Merged to Main" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Commit Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Commit:** ${{ steps.commit.outputs.sha_short }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author:** ${{ steps.commit.outputs.author }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Message:** ${{ steps.commit.outputs.message }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Date:** ${{ steps.commit.outputs.date }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Changes Detected" >> $GITHUB_STEP_SUMMARY
          if [ "${{ steps.summary.outputs.shared_changed }}" = "true" ]; then
            echo "- ✅ **Shared folder** changed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⭕ **Shared folder** no changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.summary.outputs.uc1_changed }}" = "true" ]; then
            echo "- ✅ **Use Case 1** changed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⭕ **Use Case 1** no changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          if [ "${{ steps.summary.outputs.uc2_changed }}" = "true" ]; then
            echo "- ✅ **Use Case 2** changed" >> $GITHUB_STEP_SUMMARY
          else
            echo "- ⭕ **Use Case 2** no changes" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Status" >> $GITHUB_STEP_SUMMARY
          echo "✅ **DEV**: Already deployed during PR validation" >> $GITHUB_STEP_SUMMARY
          echo "⏳ **TEST**: Ready for manual deployment" >> $GITHUB_STEP_SUMMARY
          echo "⏳ **PROD**: Awaiting TEST validation" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Go to [Actions](../../actions) → **Deploy to TEST**" >> $GITHUB_STEP_SUMMARY
          echo "2. Select the use case to deploy" >> $GITHUB_STEP_SUMMARY
          echo "3. After TEST validation, deploy to PROD" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Remember:** The shared folder is always deployed along with selected use cases." >> $GITHUB_STEP_SUMMARY