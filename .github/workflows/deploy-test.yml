name: Deploy to TEST

on:
  workflow_dispatch:
    inputs:
      use_case:
        description: 'Select use case to deploy (shared folder is always included)'
        required: true
        type: choice
        options:
          - usecase-1
          - usecase-2
          - all
      deploy_type:
        description: 'Deployment type'
        required: true
        type: choice
        default: 'incremental'
        options:
          - incremental
          - full
      comments:
        description: 'Deployment comments (optional)'
        required: false
        type: string

jobs:
  deploy-to-test:
    runs-on: ubuntu-latest
    name: Deploy to TEST Environment
    environment: test
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install Python dependencies
        run: |
          pip install requests
      
      - name: Install Databricks CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/databricks/setup-cli/main/install.sh | sh
          echo "$HOME/.databricks/bin" >> $GITHUB_PATH
      
      - name: Display Deployment Plan
        run: |
          echo "================================================"
          echo "TEST DEPLOYMENT PLAN"
          echo "================================================"
          echo "Environment: TEST"
          echo "Use Case: ${{ github.event.inputs.use_case }}"
          echo "Deployment Type: ${{ github.event.inputs.deploy_type }}"
          echo "Triggered by: ${{ github.actor }}"
          echo "Comments: ${{ github.event.inputs.comments }}"
          echo ""
          echo "Folders to deploy:"
          echo "  ✓ src/shared (always deployed)"
          
          if [ "${{ github.event.inputs.use_case }}" = "all" ]; then
            echo "  ✓ src/usecase-1"
            echo "  ✓ src/usecase-2"
          else
            echo "  ✓ src/${{ github.event.inputs.use_case }}"
          fi
          echo "================================================"
      
      - name: Clean TEST workspace (if full deployment)
        if: github.event.inputs.deploy_type == 'full'
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Performing full deployment - cleaning existing workspace..."
          
          # Determine the target based on use case selection
          if [ "${{ github.event.inputs.use_case }}" = "usecase-1" ]; then
            TARGET="test-uc1"
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-2" ]; then
            TARGET="test-uc2"
          else
            TARGET="test-all"
          fi
          
          # Clean the workspace directory
          databricks workspace delete /Workspace/Deployments/test --recursive -t $TARGET || true
          
          # Recreate directory structure
          databricks workspace mkdirs /Workspace/Deployments/test -t $TARGET
      
      - name: Deploy Bundle with Selected Use Cases
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Deploying selected use cases to TEST via bundle..."
          echo "Use Case: ${{ github.event.inputs.use_case }}"
          echo "Deployment Type: ${{ github.event.inputs.deploy_type }}"
          
          # Determine the target based on use case selection
          if [ "${{ github.event.inputs.use_case }}" = "usecase-1" ]; then
            TARGET="test-uc1"
            echo "Using target: test-uc1 (shared + usecase-1)"
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-2" ]; then
            TARGET="test-uc2"
            echo "Using target: test-uc2 (shared + usecase-2)"
          else
            TARGET="test-all"
            echo "Using target: test-all (shared + all use cases)"
          fi
          
          # Deploy bundle with the selected target
          echo "Deploying with target: $TARGET"
          databricks bundle deploy -t $TARGET --auto-approve
          
          echo "✅ Bundle deployment completed"
      
      - name: Verify Deployment
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          echo "Verifying deployment..."
          echo "----------------------------------------"
          
          # Determine the target for verification
          if [ "${{ github.event.inputs.use_case }}" = "usecase-1" ]; then
            TARGET="test-uc1"
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-2" ]; then
            TARGET="test-uc2"
          else
            TARGET="test-all"
          fi
          
          # List deployed assets (bundle creates files/ subfolder)
          echo "Bundle deployment structure:"
          databricks workspace ls /Workspace/Deployments/test -t $TARGET || echo "⚠️ Test folder not found"
          echo ""
          
          echo "Checking deployed notebooks:"
          echo "Shared folder:"
          databricks workspace ls /Workspace/Deployments/test/files/src/shared -t $TARGET || echo "⚠️ Shared folder not found at expected location"
          echo ""
          
          if [ "${{ github.event.inputs.use_case }}" = "all" ]; then
            echo "UseCase-1:"
            databricks workspace ls /Workspace/Deployments/test/files/src/usecase-1 -t $TARGET || echo "⚠️ usecase-1 not found"
            echo ""
            echo "UseCase-2:"
            databricks workspace ls /Workspace/Deployments/test/files/src/usecase-2 -t $TARGET || echo "⚠️ usecase-2 not found"
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-1" ]; then
            echo "UseCase-1:"
            databricks workspace ls /Workspace/Deployments/test/files/src/usecase-1 -t $TARGET || echo "⚠️ usecase-1 not found"
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-2" ]; then
            echo "UseCase-2:"
            databricks workspace ls /Workspace/Deployments/test/files/src/usecase-2 -t $TARGET || echo "⚠️ usecase-2 not found"
          fi
          
          echo ""
          echo "Checking cluster configuration..."
          databricks clusters list | grep test-cluster || echo "⚠️ test-cluster not found"
      
      - name: Run Validation Tests
        env:
          DATABRICKS_HOST: ${{ vars.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
        run: |
          # Make deploy script executable
          chmod +x devops/scripts/deploy.sh || true
          
          # Run validation script
          python devops/scripts/validate_deployment.py \
            --env test \
            --host "$DATABRICKS_HOST" \
            --use-case "${{ github.event.inputs.use_case }}" || echo "⚠️ Validation script not found or failed"
      
      - name: Deployment Summary
        run: |
          echo "## ✅ TEST Deployment Completed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployment Information" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment:** TEST" >> $GITHUB_STEP_SUMMARY
          echo "- **Use Case:** ${{ github.event.inputs.use_case }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Type:** ${{ github.event.inputs.deploy_type }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Status:** ✅ Success" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Deployed Structure" >> $GITHUB_STEP_SUMMARY
          echo "Bundle deployment creates the following structure:" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ `/Workspace/Deployments/test/files/src/shared`" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event.inputs.use_case }}" = "all" ]; then
            echo "- ✅ `/Workspace/Deployments/test/files/src/usecase-1`" >> $GITHUB_STEP_SUMMARY
            echo "- ✅ `/Workspace/Deployments/test/files/src/usecase-2`" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-1" ]; then
            echo "- ✅ `/Workspace/Deployments/test/files/src/usecase-1`" >> $GITHUB_STEP_SUMMARY
          elif [ "${{ github.event.inputs.use_case }}" = "usecase-2" ]; then
            echo "- ✅ `/Workspace/Deployments/test/files/src/usecase-2`" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Validate the deployment in TEST environment" >> $GITHUB_STEP_SUMMARY
          echo "2. Run any necessary tests" >> $GITHUB_STEP_SUMMARY
          echo "3. Deploy to PROD when ready" >> $GITHUB_STEP_SUMMARY